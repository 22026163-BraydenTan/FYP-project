name: CI/CD Pipeline

on:
  workflow_dispatch:  # Allows manual trigger of the workflow
  push:
    branches:
      - main         # Triggers on push to the main branch
  pull_request:
    branches:
      - main         # Triggers on pull requests targeting the main branch

jobs:
  # Build Job: Sets up the environment and builds the project
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.5  # Check out the repository

      - name: Set up JDK 11
        uses: actions/setup-java@v2    # Set up Java Development Kit version 11
        with:
          java-version: '11'
          distribution: 'adopt'        # Specify the JDK distribution

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.2  # Set up Node.js environment
        with:
          node-version: '20'             # Specify Node.js version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Set up Docker Buildx for multi-platform builds

  # Test Job: Runs tests on the application
  test:
    runs-on: ubuntu-latest
    needs: build  # Dependent on the build job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Check out the repository

      - name: Install dependencies
        run: npm install  # Install Node.js dependencies

      - name: Run tests on HTML files
        run: npx htmlhint src  # Run HTMLHint to validate HTML files

      - name: Run Cucumber tests
        run: npm run test:cucumber  # Run Cucumber tests

      - name: Upload test results to Xray
        run: node upload-results.js  # Upload test results to Xray for JIRA integration
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER: ${{ secrets.JIRA_USER }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

  # Scan Job: Scans the code for vulnerabilities and quality issues
  scan:
    runs-on: ubuntu-latest
    needs: [build, test]  # Dependent on both build and test jobs
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Check out the repository

      - name: SonarCloud Scan
        uses: ./.github/template/sonarcloud/  # Run SonarCloud scan for code quality and security analysis
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Scan HTML file for vulnerabilities
        run: npx retire --path ./ --outputformat json  # Use retire.js to scan for security issues in HTML files

  # Create Artifact Job: Prepare artifact for deployment
  create_artifact:
    runs-on: ubuntu-latest
    needs: [build, test, scan]  # Dependent on build, test, and scan jobs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Zip artifact for deployment
        run: |
          ls -l
          zip release.zip ./* -r
          ls -l release.zip

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  # Deploy Job: Deploys the application to Kubernetes
  deploy_docker:
    needs: [create_artifact]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.5

      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: v1.18.15

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: ./.github/template/docker/
        with:
          push: true   
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  Deploy Web Job: Deploy to Azure Web App
  deploy_web:
    needs: [create_artifact, deploy_docker]
    runs-on: ubuntu-latest
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.web-app-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: node-app

  #     - name: Verify artifact
  #       run: |
  #         ls -la
  #         find . -type f -name "release.zip"

      # - name: Unzip artifact for deployment
      #   run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID_B5C6 }}
          tenant-id: ${{ secrets.AZURE_TENET_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_B5C6 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'fypprojectwebapp'
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .
